parameters:
  - name: solutionName
    type: string
  - name: environmentUrl
    type: string
  - name: directory
    type: string
  - name: artifactDir
    type: string
  - name: conn
    type: string
  - name: connAzCli
    type: string
  - name: connAzTask
    type: string
  - name: appId
    type: string
  - name: emailQa
    type: string
  - name: emailRequested
    type: string

stages:
  - stage: request_approval
    displayName: '🔀 Solicitar Aprovação'
    dependsOn: 
    - init
    - pack
    - validate
    - deploy_qa
    jobs:
      - deployment: deploy_qa
        displayName: 'Dev: Deploy Prod'
        environment: 'qa_environment'
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
                displayName: 'Dev: Checkout'
                persistCredentials: true

              - task: PowerPlatformToolInstaller@2
                displayName: 'Dev: Instalar Power Platform CLI'
                inputs:
                  DefaultVersion: false
                  AddToolsToPath: true

              - task: DownloadBuildArtifacts@1
                displayName: '⬇️ Baixar Artefato'
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'solution-managed'
                  downloadPath: '${{ parameters.directory }}/bot_cab'

              - task: PowerShell@2
                displayName: 'Dev: Banner Success'
                inputs:
                  filePath: scripts/pr/pr_result_banner.ps1
                  arguments: '-Type success'
                env:
                  AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

              - task: PowerShell@2
                displayName: '🔔 Concluir Mesclagem do Pull Request'
                inputs:
                  filePath: scripts/pr/pr_result_process.ps1
                  arguments: >
                    -Type success
                    -SolutionName "${{ parameters.solutionName }}"
                    -OrgUrl "$(System.CollectionUri)"
                    -Project "$(System.TeamProject)"
                    -Repo "$(Build.Repository.Name)"
                    -TargetBranch "main"
                env:
                  AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

              - task: AzureCLI@2
                displayName: '🔄 Importar Solução Managed PRD'
                inputs:
                  azureSubscription: ${{ parameters.connAzTask }}
                  addSpnToEnvironment: true
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    pac auth create \
                      --name pipelineAuth \
                      --environment "${{ parameters.environmentUrl }}" \
                      --applicationId "${{ parameters.appId }}" \
                      --tenant "$tenantId" \
                      --azureDevOpsFederated

                    pac auth select --name pipelineAuth

                    chmod +x scripts/pac/import_solution.sh
                    scripts/pac/import_solution.sh \
                      --solution-name "${{ parameters.solutionName }}" \
                      --env-to        "${{ parameters.environmentUrl }}" \
                      --solution-zip  "${{ parameters.directory }}/bot_cab/solutions/${{ parameters.solutionName }}/${{ parameters.solutionName }}_managed.zip" \
                      --settings-file "${{ parameters.directory }}/bot_cab/solutions/${{ parameters.solutionName }}/deployment-settings.json" \
                      --timeout       120
                env:
                  PAC_ADO_ID_TOKEN_REQUEST_TOKEN: $(System.AccessToken)
                  PAC_ADO_ID_TOKEN_REQUEST_URL: >-
                    $(System.OidcRequestUri)?serviceConnectionId=${{ parameters.conn }}&api-version=7.2-preview.1
                  servicePrincipalId: $servicePrincipalId
                  idToken:           $idToken
                  tenantId:          $tenantId

      - job: failure
        displayName: '❌ Falha na Validação'
        dependsOn: deploy_qa
        condition: failed()
        continueOnError: true
        pool:
          vmImage: 'windows-latest'
        steps:
          - checkout: self
            displayName: 'Dev: Checkout'
            persistCredentials: true

          - task: PowerShell@2
            displayName: 'Dev: Banner Failed'
            inputs:
              filePath: scripts/pr/pr_result_banner.ps1
              arguments: '-Type failed'
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
            continueOnError: true

          - task: PowerShell@2
            displayName: '🔔 Rejeitar Mesclagem do Pull Request'
            inputs:
              filePath: scripts/pr/pr_result_process.ps1
              arguments: >
                -Type failed
                -SolutionName "${{ parameters.solutionName }}"
                -OrgUrl "$(System.CollectionUri)"
                -Project "$(System.TeamProject)"
                -Repo "$(Build.Repository.Name)"
                -TargetBranch "main"
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
            continueOnError: true

          #- task: SendEmail@1
          #  displayName: '📧 Enviar Resumo'
          #  inputs:
          #    To:            '${{ parameters.emailRequested }}'
          #    From:          '${{ parameters.emailQa }}'
          #    Subject:       'Problemas na solução ${{ parameters.solutionName }}'
          #    Body:          'Verifique o relatório em anexo.'
          #    BodyAsHtml:    false
          #    AddAttachment: true
          #    Attachment:   '$(System.DefaultWorkingDirectory)/resumo_${{ parameters.solutionName }}.md'
          #  continueOnError: true
